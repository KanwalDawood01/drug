import streamlit as st
import pandas as pd
from rapidfuzz import fuzz

st.title("üíä Drug Category Classifier")

# --- Initialize State ---
if "control_substances" not in st.session_state:
    st.session_state.control_substances = {
        'ACETAMIN-COD',
        'ACETAMINOPHEN/CODEINE PHOSPHATE',
        'ACETAMINOPHEN-CODEINE',
        'ACETAMINOPHEN-CODEINE PHOSPHATE',
        'ADDERALL',
        'ADDERALL XR',
        'ADIPEX-P',
        'ALLZITAL',
        'ALPRAZOLAM',
        'ALPRAZOLAM XR',
        'AMOBARBITAL',
        'AMOBARBITAL SODIUM',
        'AMPHETAMINE SULFATE',
        'ANEXSIA',
        'APADAZ',
        'APRI',
        'AROMASIN',
        'ASCOMP-CODEINE',
        'ASTRAMORPH',
        'ASTRAZENECA MORPHINE SULFATE',
        'AVINZA',
        'BELLADONNA-OPIUM',
        'BELVIQ',
        'BELVIQ XR',
        'BUPRENORPHINE',
        'BUPRENORPHINE HCL',
        'BUPRENORPHINE HCL-NALOXONE HCL',
        'BUPRENORPHINE-NALOXONE',
        'BUTALBITAL',
        'BUTALBITAL-ACETAMINOPHEN-CAFFEINE',
        'BUTALBITAL-ASPIRIN-CAFFEINE',
        'BUTALBITAL-CODEINE',
        'BUTISOL',
        'CARA-MIDRIN',
        'CARISOPRODOL',
        'CARISOPRODOL-ASPIRIN-CODEINE',
        'CARISOPRODOL-CODEINE',
        'CEPHALEXIN-CODEINE',
        'CESAMET',
        'CHLORAL HYDRATE',
        'CHLORDIAZEPOXIDE',
        'CHLORDIAZEPOXIDE-CLIDINIUM',
        'CHLOROFORM',
        'CHLORPHENTERMINE',
        'CHLORZEPATE',
        'CLIDINIUM-CHLORDIAZEPOXIDE',
        'CLONAZEPAM',
        'CLOZAPINE-CODEINE',
        'CODEINE',
        'CODEINE PHOSPHATE',
        'CODEINE SULFATE',
        'CONCERTA',
        'CONTRAVE',
        'CYCLOBENZAPRINE-CODEINE',
        'DANTROLENE-CODEINE',
        'DAYTRANA',
        'DEMEROL',
        'DEMORAL',
        'DESOXYN',
        'DEXEDRINE',
        'DEXMETHYLPHENIDATE',
        'DEXTROAMPHETAMINE',
        'DEXTROAMPHETAMINE-AMPHETAMINE',
        'DEXTROAMPHETAMINE SULFATE',
        'DIETHYLPROPION',
        'DIHYDROCODEINE',
        'DIHYDROCODEINE-ACETAMINOPHEN-CAFFEINE',
        'DIHYDROCODEINONE',
        'DIHYDROCODEINONE-ACETAMINOPHEN',
        'DIHYDROCODEINONE-BITARTRATE',
        'DILAUDID',
        'DIPRENORPHINE',
        'DOLGIC',
        'DOLOPHINE',
        'DONNATAL',
        'DOXEPIN-CODEINE',
        'DURAGESIC',
        'EEMT-CODEINE',
        'EMPIRIN-CODEINE',
        'ENVOY-CODEINE',
        'ESGIC-CODEINE',
        'ETHEX-CODEINE',
        'FENTANYL',
        'FENTANYL CITRATE',
        'FENTORA',
        'FIORICET-CODEINE',
        'FIORINAL',
        'FIORINAL-CODEINE',
        'FLUOXETINE-CODEINE',
        'GABAPENTIN-CODEINE',
        'HALAZEPAM',
        'HALCION',
        'HALOTHANE-CODEINE',
        'HISTEX-CODEINE',
        'HOMATROPINE-CODEINE',
        'HYDROCODONE',
        'HYDROCODONE BITARTRATE',
        'HYDROCODONE-ACETAMINOPHEN',
        'HYDROCODONE-HOMATROPINE',
        'HYDROCODONE-IBUPROFEN',
        'HYDROMORPHONE',
        'HYDROXYCODONE',
        'HYDROXYCODONE-ACETAMINOPHEN',
        'HYDROXYCODONE-BITARTRATE',
        'HYDROXYMORPHONE',
        'INTERMEZZO',
        'KADIAN',
        'KETAMINE',
        'KLONOPIN',
        'LORCET',
        'LORCET PLUS',
        'LORAZEPAM',
        'LORTAB',
        'LUMINAL',
        'LUNESTA',
        'LYRICA',
        'MARINOL',
        'MAYZODON',
        'MEPERIDINE',
        'MEPERIDINE-CODEINE',
        'METHADONE',
        'METHADONE HCL',
        'METHAMPHETAMINE',
        'METHAMPHETAMINE HCL',
        'METHYLPHENIDATE',
        'METHYLPHENIDATE HCL',
        'MIDRIN',
        'MORPHINE',
        'MORPHINE SULFATE',
        'MORPHINE-NALTREXONE',
        'MS CONTIN',
        'NABILONE',
        'NALBUPHINE',
        'NARCOTIC ANALGESICS',
        'NORCO',
        'NORDETTE',
        'NUBAIN',
        'NUMORPHAN',
        'NUVIGIL',
        'OXYCODONE',
        'OXYCODONE-ASPIRIN',
        'OXYCODONE-IBUPROFEN',
        'OXYCODONE-ACETAMINOPHEN',
        'OXYCONTIN',
        'OXYMORPHONE',
        'PALADONE',
        'PANTOPON',
        'PAREGORIC',
        'PENTAZOCINE',
        'PENTOBARBITAL',
        'PHENDIMETRAZINE',
        'PHENTERMINE',
        'PHENYTOIN-CODEINE',
        'PMS-CODEINE',
        'PRANDIN-CODEINE',
        'PROPOXYPHENE',
        'PROVIGIL',
        'QUAZEPAM',
        'REMIFENTANIL',
        'ROHYPNOL',
        'ROXICET',
        'ROXICODONE',
        'RYBELSUS',
        'SECALON',
        'SECONAL',
        'SEDATIVE HYPNOTICS',
        'SEMSOLON-CODEINE',
        'SOMA',
        'SOMA-CODEINE',
        'SUBOXONE',
        'SURECN-CODEINE',
        'SYNALGOS-DC',
        'TALBUTAL',
        'TALWIN',
        'TALWIN NX',
        'TEMAZEPAM',
        'TESTODERM',
        'TESTOSTERONE',
        'TOLINASE-CODEINE',
        'TORADOL-CODEINE',
        'TRANXENE',
        'TRIAZOLAM',
        'ULTRACET',
        'ULTRAM',
        'VALIUM',
        'VANTRUM-CODEINE',
        'VICODIN',
        'VICODIN ES',
        'VIVITROL',
        'XANAX',
        'XANAX XR',
        'XYREM',
        'ZOLPIDEM',
        'ZUBSOLV',
        'ACETAMINOPHEN-COD #3 TABLET',
        'ALPRAZOLAM 2 MG TABLET',
        'ALPRAZOLAM 2 MG TABS',
        'AMPHETAMINE-DEXTRO 30MG TAB',
        'HYDROCODON-APAP 10-325',
        'LACOSAMIDE 100 MG TABS',
        'LORAZEPAM 2 MG TABS',
        'OXYCODONE HCL 10 MG TABLET',
        'OXYCODONE HCL 10 MG TABS',
        'OXYCODONE HCL 30 MG TABLET',
        'PHENOBARBITAL 60 MG TABS',
        'PREGABALIN 50 MG CAPS',
        'PROMETHAZINE-CODEINE 6.25-1',
        'PROMETHAZINE-CODEINE SYRUP',
        'ZOLPIDEM TARTRATE 10 MG TAB',
        'ACETAMIN-COD', 
        'ACETAMINOPHEN/CODEINE PHOSPHATE', 
        'ACETAMINOPHEN-CODEINE', 
        'ACETAMINOPHEN-CODEINE PHOSPHATE',
        'ADDERALL', 
        'ADDERALL XR', 
        'ADIPEX-P', 
        'ALLZITAL',
        'ALPRAZOLAM',
        'ALPRAZOLAM XR', 
        'AMBIEN', 
        'AMPHETAMINE MIX',
        'ANDROGEL', 
        'APAP/CAFF/DIHYDROCODEINE',
        'APAP/CODEINE',
        'APAP-COD', 
        'ARMODAFINIL', 
        'ASCOMP/CODEINE', 
        'ASCOMP-CODEINE',
        'ATIVAN', 
        'BELBUCA',
        'BELSOMRA', 
        'BUPAP',
        'BUPRENORPHINE', 
        'BUPRENORPHINE/NALOXONE',
     'BUTAL/APAP',
     'BUTAL/ASP/CAFF/COD', 
     'BUTALBITAL/ACETAMINOPHEN',
     'BUTALBITAL/ACETAMINOPHEN/CAFFEINE',
     'BUTALBITAL/ACETAMINOPHEN/CAFFEINE/CODEINE', 
     'BUTALBITAL/APAP',
     'BUTALBITAL/ASPIRIN/CAFFEINE',
     'BUTALBITAL/ASPIRIN/CAFFEINE/CODEINE PHOSPHATE',
      'BUTORPHANOL',
     'BUTRANS', 
      'CARISOPRODOL',
     'CENOBAMATE',
     'CENOBAMATE',
      'CHLORDIAZEPOXIDE',
       'CLONAZEPAM',
        'CLORAZEPATE', 
        'CODEINE', 
        'CODEINE SULFATE',
         'CODEINE|GUAIFENESIN',
         'CODEINE-GUAIF',
        'CONCERTA', 
        'DEPO-TESTOSTERONE', 
        'DEXMETHYL',
    'DEXMETHYLPHENIDATE',
       'DEXTRO APAP',
       'DEXTRO-AMPHET',
     'DIAZEPAM', 
    'DILAUDID',
     'DIPHENOXYLATE', 
     'DOLOPHINE',
     'DRONABINOL',
     'DURAGESIC', 
     'ESGIC', 
     'ESZOPICLONE', 
     'FENTANYL',
      'FIORICET',
       'FIORINAL',
      'FIORINAL/COD',
        'FOCALIN',
        'GUAIATUSSIN', 
        'GUAIFENESIN/CODEINE',
        'GUAIFENESIN-COD',
        'HALCION',
        'HYCODAN',
        'HYDROCOD',
        'HYDROCOD-ACETAMIN', 
        'HYDROCOD-APAP',
        'HYDROCODONE',
        'HYDROCODONE/APAP', 
        'HYDROCODONE-APAP', 
        'HYDROMOR', 
        'HYDROMORPHONE',
        'HYSINGLA',
     'KLONOPIN', 
     'LACOSAMIDE', 
     'LASMIDITAN', 
     'LEVO-DROMORAN',
     'LEVORPHANOL', 
     'LIBRIUM',
      'LISDEXAM',
     'LISDEXAMFETAMINE',
     'LOMAIRA', 
      'LOMOTIL', 
     'LORAZEPAM', 
     'LUNESTA', 
     'LYRICA', 
     'MARINOL',
     'METADATE', 
     'METHADONE', 
     'METHYLIN', 
     'METHYLPHENIDATE', 
       'MIDAZOLAM', 
       'MODAFINIL',
     'MORPHINE',
        'MS CONTIN', 
      'NEURONTIN',
     'NORCO',
     'NUCYNTA',
     'NUVIGIL', 
     'OPANA',
     'ORBIVAN', 
     'OXANDRIN',
     'OXANDROLONE', 
     'OXYCOD', 
     'OXYCOD/APAP', 
     'OXYCOD-APAP',
     'OXYCODONE',
     'OXYCODONE HCL/ACETAMINOPHEN', 
        'OXYCODONE HCL-ACETAMINOPHEN',
        'OXYMORPHONE',
        'OYXCOD/ACETAMIN',
        'OYXCOD-ACETAMIN', 
        'PENTAZOCINE/APAP',
        'PENTAZOCINE/NALOXONE',
        'PERCOCET', 
        'PHENERGAN/CODEINE', 
        'PHENERGAN-CODEINE',
     'PHENOBARBITAL', 
     'PHENTERMINE', 
     'PHRENILIN', 
     'PREGABALIN', 
     'PROMETH/COD', 
     'PROMETHAZINE/CODEINE', 
     'PROMETH-COD', 
        'PROVIGIL',
        'RESTORIL', 
        'REVYOW', 
        'RITALIN', 
        'ROBITUSSIN',
        'ROXICOD',
        'ROXICODONE', 
     'RYZOLT',
     'SOLFOTON',
     'SOMA', 
     'SONATA', 
     'STADOL', 
     'SUBOXONE',
     'SUBUTEX',
     'SUVOREXANT', 
     'TALACEN', 
     'TALWIN', 
     'TAPENTADOL', 
     'TEMAZEPAM',
     'TESTOSTERONE',
       'TESTOSTERONE CYPIONATE', 
      'TRAMADOL',
        'TRANXENE',
     'TREZIX', 
     'TRIAZOLAM',
     'TYLENOL/CODEINE',
      'TYLENOL/COD', 
     'ULTRACET', 
     'ULTRAM', 
     'VALIUM', 
     'VALTOCO',
      'VERSED',
     'VIMPAT', 
        'VYVANSE',
     'XANAX',
     'XCOPRI', 
     'XTAMPZA', 
     'ZALEPLON', 
     'ZOLPIDEM'
    }

if "df" not in st.session_state:
    st.session_state.df = None

# --- Upload Section ---
st.subheader("üìÅ Upload Drug List File")
uploaded_file = st.file_uploader("Upload a CSV or Excel file with 'DRUG NAME' column", type=["csv", "xlsx"])

def classify_and_store(df):
    def classify_drug(drug_name):
        for controlled in st.session_state.control_substances:
            if fuzz.token_set_ratio(drug_name, controlled) >= 90:
                return "Control Substances"
        return "Non Control Substances"

    df['DRUG NAME'] = df['DRUG NAME'].astype(str).str.strip().str.upper()
    df['Category'] = df['DRUG NAME'].apply(classify_drug)
    st.session_state.df = df

if uploaded_file:
    try:
        df = pd.read_csv(uploaded_file) if uploaded_file.name.endswith('.csv') else pd.read_excel(uploaded_file)
    except Exception as e:
        st.error(f"‚ùå Failed to read file: {e}")
        st.stop()

    if 'DRUG NAME' not in df.columns:
        st.error("‚ùå The uploaded file must contain a 'DRUG NAME' column.")
        st.stop()

    classify_and_store(df)

# --- Control Substance Management ---
if st.session_state.df is not None:
    with st.expander("üõ†Ô∏è Add or Remove Control Substance"):
        col1, col2 = st.columns([3, 1])
        with col1:
            mod_drug = st.text_input("Drug name").strip().upper()
        with col2:
            action = st.radio("Action", ["Add", "Remove"], horizontal=True)

        if mod_drug:
            if action == "Add":
                if mod_drug not in st.session_state.control_substances:
                    st.session_state.control_substances.add(mod_drug)
                    st.success(f"‚úÖ Added: {mod_drug}")
                else:
                    st.info(f"'{mod_drug}' already exists.")
            else:
                if mod_drug in st.session_state.control_substances:
                    st.session_state.control_substances.remove(mod_drug)
                    st.warning(f"üóëÔ∏è Removed: {mod_drug}")
                else:
                    st.info(f"'{mod_drug}' not found.")

            # Re-classify on modification
            classify_and_store(st.session_state.df.copy())

# --- Display Categorized Drugs ---
if st.session_state.df is not None:
    st.subheader("üìÑ Categorized Drug List")
    st.dataframe(st.session_state.df[['DRUG NAME', 'Category']], use_container_width=True)

    # --- Search Drug ---
    st.subheader("üîç Search Drug")
    drug_search = st.selectbox("Select a drug", sorted(st.session_state.df['DRUG NAME'].unique()))
    result = st.session_state.df[st.session_state.df['DRUG NAME'] == drug_search]
    st.write(f"**Category:** {result['Category'].iloc[0]}")
    st.dataframe(result)
else:
    st.info("üìÇ Upload a valid CSV or Excel file to begin.")
